Given javascript (nested xml tags):
  html`
  <div>
  <div> </div>
  </div>
  `;

Do:
  =G

Expect javascript:
  html`
  	<div>
  		<div> </div>
  	</div>
  `;



Given javascript (simple text on a separate line):
  html`
    <div>
    simple text
    </div>
    `;

Do:
  =G

Expect javascript:
  html`
  	<div>
  		simple text
  	</div>
  `;

Given javascript (nested css):
  html`
  <div></div>
  <style inlcude="module">
  element {
    background: green;
  }
  .class {
    border: red;
  }
  #id {
  opacity: 0.5
  }
  </style>
  <div>
  <paper-button></paper-button>
  </div>
  `

Do:
  =G

Expect javascript:
  html`
  	<div></div>
  	<style inlcude="module">
  		element {
  			background: green;
  		}
  		.class {
  			border: red;
  		}
  		#id {
  			opacity: 0.5
  		}
  	</style>
  	<div>
  		<paper-button></paper-button>
  	</div>
  `

Given javascript (lit-html readme examples):
  const render = () => html`
  ${when(state === 'loading',
  html`<div>Loading...</div>`,
  html`<p>${message}</p>`)}
  `;
  const render = () => html`
  <ul>
  ${repeat(items, (i) => i.id, (i, index) => html`
  <li>${index}: ${i.name}</li>`)}
  </ul>
  `;
  const render = () => html`
  <p>
  ${until(
  fetch('content.txt').then((r) => r.text()),
  html`<span>Loading...</span>`)}
  </p>
  `;

Do:
  =G

Expect javascript:
  const render = () => html`
  	${when(state === 'loading',
  		html`<div>Loading...</div>`,
  		html`<p>${message}</p>`)}
  `;
  const render = () => html`
  	<ul>
  		${repeat(items, (i) => i.id, (i, index) => html`
  			<li>${index}: ${i.name}</li>`)}
  	</ul>
  `;
  const render = () => html`
  	<p>
  		${until(
  			fetch('content.txt').then((r) => r.text()),
  			html`<span>Loading...</span>`)}
  	</p>
  `;
